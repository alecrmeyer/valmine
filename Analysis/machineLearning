import mysql.connector
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split


mydb = mysql.connector.connect(
  host="localhost",
  user="root",
  password="password",
  database="valorant_tracker"
)
cursor = mydb.cursor()
data = pd.read_sql("SELECT * FROM stats", mydb)
print(len(data.index))
# print("Database is created")

data = data.dropna()

data = data[data.result != "tied"]

data = data.sample(frac=1)

y = np.array(data['result'])

X = data.drop('smurf', axis = 1)
X = X.drop('match_id', axis = 1)
X = X.drop('date', axis = 1)
X = X.drop('current_rank', axis = 1)
X = X.drop('map', axis = 1)
X = X.drop('result', axis = 1)
X = X.drop('rounds', axis = 1)
X = X.drop('agent', axis = 1)


X = np.array(X)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.5)


#Random Forest
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score
rf = RandomForestClassifier(n_estimators=100, max_features=4)
rf.fit(X_train, y_train)
rf_predict=rf.predict(X_test)

# #figureout hyper parameters

# #print confusion matrix and accuracy score
rf_conf_matrix = confusion_matrix(y_test, rf_predict)
rf_acc_score = accuracy_score(y_test, rf_predict)
print(rf_conf_matrix)
accuracy = rf_acc_score*100
print(accuracy)

# #MAE for comparison
# errors = abs(rf_predict - y_test)
# print('Mean Absolute Error:', round(np.mean(errors), 2))

# print(rf.feature_importances_)
